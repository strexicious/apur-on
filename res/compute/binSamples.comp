#version 430
layout(local_size_x = 16, local_size_y = 16) in;
layout(rgba32f, binding = 0) uniform image2D pos_samples;
layout(r32ui, binding = 1) uniform uimage2D lists;
layout(r32ui, binding = 2) uniform uimage2D lists_heads;
layout(binding = 0) uniform usampler2D pos_mask;

const uint LISTS_BUFFER_WIDTH = 1600;

uint doubleIdxToLinear(uvec2 idx) {
	return idx.y * LISTS_BUFFER_WIDTH + idx.x;
}

ivec2 findBin(vec4 sample_pos) {
	return ivec2(sample_pos.x * 50 + 50, sample_pos.y * 50 + 50);
}

void main() {
	ivec2 coords = ivec2(gl_GlobalInvocationID);
	vec4 pos_sample = imageLoad(pos_samples, coords);
	uvec4 mask = texelFetch(pos_mask, coords, 0);
	if (mask.r != 0) {
		ivec2 bin = findBin(pos_sample);
		uint lastHead = imageAtomicExchange(lists_heads, bin, doubleIdxToLinear(coords) + 1);
		imageStore(lists, coords, uvec4(lastHead, 0, 0, 0));
	}
}
